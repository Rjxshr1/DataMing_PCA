详细总结整个实验
实验流程：读取所有训练样本、训练样本降维、测试样本识别
重点：已知一些图像分类的情况下，给一个新样本，判定这个样本属于哪一类。
本质：这个实验项目的本质是分类问题,已知分类的情况下判断新样本属于哪一类。
解决思想：三阶近邻
          解释三阶近邻：计算新样本点和原来所有样本点之间的距离
                        依次序找到三个距离最小的点，class1、class2、class3
                        其中class1表示距离最近的点、class2距离次近、class3距离第三近
                        如果class1、class2、class3不属于同一类，则新样本属于class1所属类
                        如果class1、class2属于同类，而class3不同，则新样本属于class1所属的类
                        如果class2、class3属于同类，而class1不同，则新样本属于class2所属的类
                        如果class1、class3属于同类，而class2不同，则新样本属于class1所属的类
			如果class1、class2和class3同类，则新样本属于class1所属的类。
关键问题：原来空间中一个样本矢量化后是(1,10304)的维度，维度太大，不便于计算距离。
          还有一个难度就是：怎么判别class1、class2、class3的类别。
解决方案：维度太大，使用pca方法进行降维。
          判别class1、class2、class3的类：1、把所有已知训练图像按类别存储、读取
                                          2、存储成一个数组
                                          3、索引值各区间范围就表示了各种不同的类别
关于读取图像：读取图像并转化为数组，使用matplotlib的image子模块的imread()函数。
              imread()函数中要传入的参数是图片存放的位置，这是一个字符串（可以用加号进行拆分）
              例如"C:\\Coder\\DataMing_PCA\\ORL\\s1\\1.jpg"可写成"C:\\Coder\\Da"+"taMing_PCA\\"+"ORL\\s1\\1.jpg"
              如果图片和文件夹的名称是由字符和整数数字组成的，可以这么处理数字
              "C:\\Coder\\DataMing_PCA\\ORL\\s"+str(1)+"\\"+str(i)+".jpg"
              这么做可以实现读取的自动化。
              具体见代码，好好理解。
关于pca：最不理解的地方是这里的pca过程与我所理解的有些不同，应当经过梳理后再更新。
         这里使用pca确实让数据的维度降低，从而让计算距离变得简化。
